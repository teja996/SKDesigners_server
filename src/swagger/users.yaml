openapi: 3.0.0
info:
  title: "Users API"
  version: "1.0.0"
  description: "API documentation for user management and authentication"
tags:
  - name: Users
    description: "API endpoints for managing users and authentication"
paths:
  /api/users/register:
    post:
      summary: "Registers a new user"
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '201':
          description: "User registered successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: "Bad request"
  /api/users/login:
    post:
      summary: "Authenticates a user and returns a token"
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: "User authenticated successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: "Invalid credentials"
  /api/users/profile:
    get:
      summary: "Retrieves the authenticated user's profile"
      tags:
        - Users
      security:
        - BearerAuth: []
      responses:
        '200':
          description: "User profile retrieved successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '401':
          description: "Unauthorized"
    put:
      summary: "Updates the authenticated user's profile"
      tags:
        - Users
      security:
        - BearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdate'
      responses:
        '200':
          description: "User profile updated successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '400':
          description: "Bad request"
        '401':
          description: "Unauthorized"
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserRegistration:
      type: object
      properties:
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        password:
          type: string
          format: password
          example: "password123"
      required:
        - name
        - email
        - password
    UserLogin:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        password:
          type: string
          format: password
          example: "password123"
      required:
        - email
        - password
    AuthResponse:
      type: object
      properties:
        _id:
          type: string
          description: "User ID"
        name:
          type: string
          description: "User's name"
        email:
          type: string
          format: email
          description: "User's email"
        token:
          type: string
          description: "JWT authentication token"
      required:
        - _id
        - name
        - email
        - token
    UserProfile:
      type: object
      properties:
        _id:
          type: string
          description: "User ID"
        name:
          type: string
          description: "User's name"
        email:
          type: string
          format: email
          description: "User's email"
      required:
        - _id
        - name
        - email
    UserProfileUpdate:
      type: object
      properties:
        name:
          type: string
          description: "Updated name"
          example: "John Doe"
        email:
          type: string
          format: email
          description: "Updated email"
          example: "john.doe@example.com"
        password:
          type: string
          format: password
          description: "Updated password"
          example: "newpassword123"
